@model MarkomPos.Model.Model.OfferItem

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content footerBg">
            <form method="post" action="@Url.Action("Create", "OfferItems")">
                @Html.AntiForgeryToken()
                <div class="modal-header txtColor">
                    <h4 class="modal-title">Offer Item</h4>
                    <button type="button" class="close txtColor" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body formBg">
                    <section class="content">
                        <div class="container-fluid">
                            <div class="row">
                                <!-- left column -->
                                <div class="col-md-12">
                                    @Html.HiddenFor(model => model.ID)
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.OfferId, "OfferId", htmlAttributes: new { @class = "control-label" })
                                                    @Html.DropDownList("OfferId", null, "Select Offer", htmlAttributes: new { @class = "form-control", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.OfferId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Ordinal, htmlAttributes: new { @class = "control-label" })
                                                    @Html.EditorFor(model => model.Ordinal, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Ordinal, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ProductId, "ProductId", htmlAttributes: new { @class = "control-label" })
                                                    @Html.DropDownList("ProductId", null, "Select Product", htmlAttributes: new { @class = "form-control", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label" })
                                                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.UnitOfMeasureId, "UnitOfMeasureId", htmlAttributes: new { @class = "control-label" })
                                                    @Html.DropDownList("UnitOfMeasureId", null, "Select Unit Of Measure", htmlAttributes: new { @class = "form-control", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.UnitOfMeasureId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.UnitOfMeasureName, htmlAttributes: new { @class = "control-label" })
                                                    @Html.EditorFor(model => model.UnitOfMeasureName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                    @Html.ValidationMessageFor(model => model.UnitOfMeasureName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label" })
                                                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label" })
                                                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Porez, htmlAttributes: new { @class = "control-label" })
                                                    @Html.EditorFor(model => model.Porez, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Porez, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
                <div class="modal-footer footerBg">
                    <button type="submit" class="btn btn-primary">Submit</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>