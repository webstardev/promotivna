@model IEnumerable<MarkomPos.Model.ViewModel.OfferVm>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="um-wrap">
    <div class="container">
        <div class="card">
            <div class="card-header">
                <div class="btn-create-wrap">
                    <a class="btn btn-default create" href="javascript:void(0)">Create New</a>
                </div>
            </div>
            <div class="card-body">
                <table id="tblOffer" class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>

                            </th>
                            <th>
                                @Html.DisplayName("povezani kupac")
                            </th>
                            <th>
                                @Html.DisplayName("rok isporuke")
                            </th>
                            <th>
                                @Html.DisplayName("paritet")
                            </th>
                            <th>
                                @Html.DisplayName("način plaćanja")
                            </th>
                            <th>
                                @Html.DisplayName("odgovorna osoba")
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OfferNumber)
                            </th>
                            <th>@Html.DisplayName("stavka ponude")</th>
                            <th width="8%"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <img src="~/Content/Image/plus.png" />
                                    <div style="display:none">
                                        <table cellpadding="0" cellspacing="0" class="ChildGrid">
                                            <tr>
                                                <th>
                                                    ContactName
                                                </th>
                                                <th>
                                                    Product Name
                                                </th>
                                                <th>
                                                    UnitOfMeasure
                                                </th>
                                                <th>
                                                    Ordinal
                                                </th>
                                                <th>
                                                    ProductName
                                                </th>
                                                <th>
                                                    UnitOfMeasureName
                                                </th>
                                                <th>
                                                    Quantity
                                                </th>
                                                <th>
                                                    Price
                                                </th>
                                                <th></th>
                                            </tr>
                                            @{
                                                var offerIRepositorytem = new MarkomPos.Repository.Repository.OfferItemRepository();
                                                var getOfferItemlist = offerIRepositorytem.getOfferItemList(item.ID);
                                                if (getOfferItemlist != null && getOfferItemlist.Count > 0)
                                                {
                                                    foreach (var offerItem in getOfferItemlist)
                                                    {
                                                        <tr>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => offerItem.Offer.ContactName)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => offerItem.Product.Name)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => offerItem.UnitOfMeasure.Name)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => offerItem.Ordinal)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => offerItem.ProductName)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => offerItem.UnitOfMeasureName)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => offerItem.Quantity)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => offerItem.Price)
                                                            </td>
                                                            <td>
                                                                <a class="editOfferItem" onclick="OpenEditOfferItemPage(@offerItem.ID)" href="javascript:void(0)"><i class="fa fa-user-edit"></i></a> |
                                                                <a class="detailsOfferItem" onclick="OpenDetailsOfferItemPage(@offerItem.ID)" href="javascript:void(0)"><i class="fa fa-eye"></i></a> |
                                                                @Html.ActionLink(" ", "DeleteConfirmed", "OfferItems", new { id = offerItem.ID }, new { @class = "fa fa-trash", onclick = "return confirm('Are you sure you want to remove to list ?');" })
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr>
                                                        <td colspan="10">No Records found</td>
                                                    </tr>
                                                }

                                            }

                                        </table>
                                    </div>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Contact.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DeliveryTerm.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DocumentParity.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PaymentMethod.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ResponsibleUser.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OfferNumber)
                                </td>
                                <td><a class="btn btn-default offerItem" onclick="OpenAddOfferItem(@item.ID)" href="javascript:void(0)">stavka ponude</a></td>
                                <td>
                                    <a class="edit" onclick="OpenEditOfferPage(@item.ID)" href="javascript:void(0)"><i class="fa fa-user-edit"></i></a> |
                                    <a class="details" onclick="OpenDetailsOfferPage(@item.ID)" href="javascript:void(0)"><i class="fa fa-eye"></i></a> |
                                    @Html.ActionLink(" ", "DeleteConfirmed", new { id = item.ID }, new { @class = "fa fa-trash", onclick = "return confirm('Are you sure you want to remove to list ?');" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</section>

<div id="dialog">
</div>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.9/jquery-ui.js" type="text/javascript"></script>

<script>
    $(document).ready(function () {

        $('#tblOffer thead tr').clone(true).appendTo('#tblOffer thead');
        $('#tblOffer thead tr:eq(1) th').each(function (i) {
            var title = $(this).text();

            var length = $("table").find("tr:first th").length;
            if (i == 0 || i == 8) {
                return;
            }

            $(this).html('<input type="text" class="form-control text-box single-line"/>');

            $('input', this).on('keyup change', function () {
                if (table.column(i).search() !== this.value) {
                    table
                        .column(i)
                        .search(this.value)
                        .draw();
                }
            });
        });

        var events = $('#events');

        var table = $('#tblOffer').DataTable({
            paging: true,
            lengthChange: true,
            searching: true,
            ordering: true,
            info: true,
            autoWidth: false,
            responsive: true,
            colReorder: true,
            orderCellsTop: true,
            fixedHeader: false,
            columnDefs: [
                { orderable: false, targets: -1 }
            ]
        });

    });

    $(function () {
        $(".create").click(function () {
            var $buttonClicked = $(this);
            var options = {
                "backdrop": "static",
                keyboard: true
            };
            var ajaxCallURL = '/Offers/Create';
            $.ajax({
                type: "GET",
                url: ajaxCallURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#dialog').html(data);
                    $('#myModal').modal(options);
                    $('#myModal').modal('show');
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        });
        $("body").on("click", "img[src*='plus.png']", function () {
            $(this).closest("tr").after("<tr><td></td><td colspan = '999'>" + $(this).next().html() + "</td></tr>");
            $(this).attr("src", "/Content/Image/minus.png");
        });
        //Assign Click event to Minus Image.
        $("body").on("click", "img[src*='minus.png']", function () {
            $(this).attr("src", "/Content/Image/plus.png");
            $(this).closest("tr").next().remove();
        });
    });
    function OpenEditOfferPage(Id) {
        var options = {
            "backdrop": "static",
            keyboard: true
        };
        var ajaxCallURL = '/Offers/Edit?id=' + Id;
        $.ajax({
            type: "GET",
            url: ajaxCallURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#dialog').html(data);
                $('#myModal').modal(options);
                $('#myModal').modal('show');
            },
            error: function () {
                alert("Content load failed.");
            }
        });
    }
    function OpenDetailsOfferPage(Id) {
        var $buttonClicked = $(this);
        var options = {
            "backdrop": "static",
            keyboard: true
        };
        var ajaxCallURL = '/Offers/Details?id=' + Id;
        $.ajax({
            type: "GET",
            url: ajaxCallURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#dialog').html(data);
                $('#detailsModal').modal(options);
                $('#detailsModal').modal('show');
            },
            error: function () {
                alert("Content load failed.");
            }
        });
    }

    function OpenAddOfferItem(Id) {
        var $buttonClicked = $(this);
        var options = {
            "backdrop": "static",
            keyboard: true
        };
        var ajaxCallURL = '/OfferItems/Create?OfferId=' + Id;
        $.ajax({
            type: "GET",
            url: ajaxCallURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#dialog').html(data);
                $('#myModal').modal(options);
                $('#myModal').modal('show');
            },
            error: function () {
                alert("Content load failed.");
            }
        });
    }
    function OpenEditOfferItemPage(Id) {
        var options = {
            "backdrop": "static",
            keyboard: true
        };
        var ajaxCallURL = '/OfferItems/Edit?id=' + Id;
        $.ajax({
            type: "GET",
            url: ajaxCallURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#dialog').html(data);
                $('#myModal').modal(options);
                $('#myModal').modal('show');
            },
            error: function () {
                alert("Content load failed.");
            }
        });
    }
    function OpenDetailsOfferItemPage(Id) {
        var options = {
            "backdrop": "static",
            keyboard: true
        };
        var ajaxCallURL = '/OfferItems/Details?id=' + Id;
        $.ajax({
            type: "GET",
            url: ajaxCallURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#dialog').html(data);
                $('#detailsModal').modal(options);
                $('#detailsModal').modal('show');
            },
            error: function () {
                alert("Content load failed.");
            }
        });
    }
</script>
