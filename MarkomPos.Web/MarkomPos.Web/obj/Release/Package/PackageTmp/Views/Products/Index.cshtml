@model IEnumerable<MarkomPos.Model.ViewModel.ProductVm>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int i = 0;
}

<section class="um-wrap">
    <div class="container">
        <div class="card">
            <div class="card-header">
                <div class="btn-create-wrap">
                    <a class="btn btn-default create" href="javascript:void(0)">Create New</a>
                </div>
            </div>
            <div class="card-body">
                <table id="tblProduct" class="table table-bordered table-hover">

                    <thead>
                        <tr>
                            <th width="10%">

                            </th>
                            <th width="90%">
                                @Html.DisplayNameFor(model => model.ProductGroup.Name)
                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @{
                            foreach (var group in Model.GroupBy(item => item.ProductGroup.Name))
                            {
                                <tr>
                                    <td>
                                        <img src="~/Content/Image/plus.png" />
                                        <div style="display:none">
                                            <table cellpadding="0" cellspacing="0" class="ChildGrid">
                                                <tr>
                                                    <th width="10%">

                                                    </th>
                                                    <th width="10%">
                                                        @Html.DisplayNameFor(model => model.UnitOfMeasure.Name)
                                                    </th>

                                                </tr>
                                                @{
                                                    foreach (var unitGroup in group.GroupBy(x => x.UnitOfMeasure.Name))
                                                    {
                                                        var tableId = "tblProductGroupingList" + i;

                                                        <tr>
                                                            <td>
                                                                <img src="~/Content/Image/plus.png" />
                                                                <div style="display:none">
                                                                    <table id="@tableId" class="tblProductGroupingList ChildGrid table table-bordered table-hover" cellpadding="0" cellspacing="0">
                                                                        <tr>
                                                                            <th width="20%">
                                                                                @Html.DisplayNameFor(model => model.Name)
                                                                            </th>
                                                                            <th width="10%">
                                                                                @Html.DisplayNameFor(model => model.DisplayName)
                                                                            </th>
                                                                            <th width="20%">
                                                                                @Html.DisplayNameFor(model => model.Note)
                                                                            </th>
                                                                            <th width="10%">
                                                                                @Html.DisplayNameFor(model => model.Code)
                                                                            </th>
                                                                            <th width="12%"></th>
                                                                        </tr>
                                                                        @{
                                                                            foreach (var item in unitGroup)
                                                                            {
                                                                                <tr>
                                                                                    <td>
                                                                                        @Html.DisplayFor(modelItem => item.Name)
                                                                                    </td>
                                                                                    <td>
                                                                                        @Html.DisplayFor(modelItem => item.DisplayName)
                                                                                    </td>
                                                                                    <td>
                                                                                        @Html.DisplayFor(modelItem => item.Note)
                                                                                    </td>
                                                                                    <td>
                                                                                        @Html.DisplayFor(modelItem => item.Code)
                                                                                    </td>
                                                                                    <td>
                                                                                        <a class="edit" onclick="OpenEditProduct(@item.ID)" data-id="@item.ID" href="javascript:void(0)"><i class="fa fa-user-edit"></i></a> |
                                                                                        <a class="details" onclick="OpenProductDetails(@item.ID)" data-id="@item.ID" href="javascript:void(0)"><i class="fa fa-eye"></i></a> |
                                                                                        @Html.ActionLink(" ", "DeleteConfirmed", new { id = item.ID }, new { @class = "fa fa-trash", onclick = "return confirm('Are you sure you want to remove " + @item.Name + " to list ?');" })
                                                                                    </td>
                                                                                </tr>
                                                                            }
                                                                        }

                                                                    </table>
                                                                </div>
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => unitGroup.Key)
                                                            </td>
                                                        </tr>
                                                        i++;
                                                    }
                                                }

                                            </table>
                                        </div>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => group.Key)
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</section>

<div id="dialog">
</div>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.9/jquery-ui.js" type="text/javascript"></script>
<script>


    $(document).ready(function () {

        $("body").on("click", "img[src*='plus.png']", function () {
            $(this).closest("tr").after("<tr><td></td><td colspan = '999'>" + $(this).next().html() + "</td></tr>");
            $(this).attr("src", "/Content/Image/minus.png");
        });
        //Assign Click event to Minus Image.
        $("body").on("click", "img[src*='minus.png']", function () {
            $(this).attr("src", "/Content/Image/plus.png");
            $(this).closest("tr").next().remove();
        });


        var groupColumn = 0;
        $('#tblProduct thead tr:eq(0) th').each(function (i) {

            if ($(this).text().trim() == "Name") {
                groupColumn = i;
            }
        });

        $('#tblProduct thead tr').clone(true).appendTo('#tblProduct thead');
        $('#tblProduct thead tr:eq(1) th').each(function (i) {
            var title = $(this).text();

            var length = $("table").find("tr:last td").length;
            if (i == length - 1 || i == 0) {
                return;
            }

            $(this).html('<input type="text" class="form-control text-box single-line"/>');

            $('input', this).on('keyup change', function () {
                if (table.column(i).search() !== this.value) {
                    table
                        .column(i)
                        .search(this.value)
                        .draw();
                }
            });
        });


        var table = $('#tblProduct').DataTable({
            paging: true,
            lengthChange: true,
            searching: true,
            ordering: true,
            info: true,
            autoWidth: false,
            responsive: true,
            colReorder: true,
            orderCellsTop: true,
            fixedHeader: false,
            columnDefs: [{
                'targets': [0], /* column index [0,1,2,3]*/
                'orderable': false, /* true or false */
            }],
        });

    });

    function OpenEditProduct(Id) {
        var options = {
            "backdrop": "static",
            keyboard: true
        };
        var ajaxCallURL = '/Products/Edit?id=' + Id;
        $.ajax({
            type: "GET",
            url: ajaxCallURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#dialog').html(data);
                $('#myModal').modal(options);
                $('#myModal').modal('show');

                var subVal = $('#subGroup').val();
                var basicVal = $('#ProductGroupId').val();
                var val = $('#mainGroup').val();

                var ddlSubGroup = $("#subGroup");
                if (val != null && val != undefined && val > 0) {
                    $.ajax({
                        url: "/ProductGroups/GetSelectedSubGroups",
                        type: 'GET',
                        async: false,
                        cache: false,
                        data: {
                            id: val
                        },
                        success: function (result) {
                            ddlSubGroup.empty();
                            if (result != null && result.length > 0) {
                                ddlSubGroup.empty().append('<option selected="selected">Select Group</option>');
                                $.each(result, function () {
                                    ddlSubGroup.append($("<option></option>").val(this['Value']).html(this['Text']));
                                });

                                $('#subGroup').val(subVal);

                                var ddlParrentGroup = $("#ProductGroupId");
                                ddlParrentGroup.empty();

                                var ddlParrentGroup = $("#ProductGroupId");
                                if (subVal != null && subVal != undefined && subVal > 0) {
                                    $.ajax({
                                        url: "/ProductGroups/GetSelectedBasicGroups",
                                        type: 'GET',
                                        async: false,
                                        cache: false,
                                        data: {
                                            id: subVal
                                        },
                                        success: function (result) {
                                            ddlParrentGroup.empty();
                                            if (result != null && result.length > 0) {
                                                ddlParrentGroup.empty().append('<option selected="selected">Select Group</option>');
                                                $.each(result, function () {
                                                    ddlParrentGroup.append($("<option></option>").val(this['Value']).html(this['Text']));
                                                });

                                                $('#ProductGroupId').val(basicVal);
                                            }
                                        },
                                        error: function () {
                                            alert("error");
                                        }
                                    });
                                }

                            }
                        },
                        error: function () {
                            alert("error");
                        }
                    });
                }

            },
            error: function () {
                alert("Content load failed.");
            }
        });
    }
    function OpenProductDetails(Id) {
        var options = {
            "backdrop": "static",
            keyboard: true
        };
        var ajaxCallURL = '/Products/Details?id=' + Id;
        $.ajax({
            type: "GET",
            url: ajaxCallURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#dialog').html(data);
                $('#detailsModal').modal(options);
                $('#detailsModal').modal('show');
            },
            error: function () {
                alert("Content load failed.");
            }
        });
    }

    $(function () {
        $(".create").click(function () {
            var $buttonClicked = $(this);
            var options = {
                "backdrop": "static",
                keyboard: true
            };
            var ajaxCallURL = '/Products/Create';
            $.ajax({
                type: "GET",
                url: ajaxCallURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#dialog').html(data);
                    $('#myModal').modal(options);
                    $('#myModal').modal('show');


                    var ddlSubGroup = $("#subGroup");
                    ddlSubGroup.empty();
                    var ddlParrentGroup = $("#ProductGroupId");
                    ddlParrentGroup.empty();
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        });
    });
</script>
