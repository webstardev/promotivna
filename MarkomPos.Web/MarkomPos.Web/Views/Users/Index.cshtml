@model IEnumerable<MarkomPos.Model.Model.User>

@{
    ViewBag.Title = "Index";
}

<section class="content-header">
    <div class="container">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="txtColor">Users</h1>
            </div>
            <div class="col-sm-6">
                @*<ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item txtColor">Unit of measure</li>
                        <li class="breadcrumb-item txtColor active">List</li>
                    </ol>*@
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<section class="container">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        @*<div class="pull-left">
                                <h3 class="card-title">Unit of Measure</h3>
                            </div>*@
                        <div class="btn-create-wrap">
                            <a class="btn btn-default create" href="javascript:void(0)">Create New</a>
                            @*@Html.ActionLink("Create New", "Create")*@
                        </div>
                    </div>
                    <div class="card-body">
                        <table id="example2" class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.ID)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Name)
                                    </th>
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.Surname)
                                        </th>*@
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.Address)
                                        </th>*@
                                    <th>
                                        @Html.DisplayNameFor(model => model.JobDescription)
                                    </th>
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.Active)
                                        </th>*@
                                    <th>
                                        @Html.DisplayNameFor(model => model.Email)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.MobilePhone)
                                    </th>
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.Note)
                                        </th>*@
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.Note2)
                                        </th>*@
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.ColorHex)
                                        </th>*@
                                    <th>
                                        @Html.DisplayNameFor(model => model.Username)
                                    </th>
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.PasswordSalt)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.PasswordHash)
                                        </th>*@
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.DateCreated)
                                        </th>*@
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.CreatedBy)
                                        </th>*@
                                    <th>
                                        @Html.DisplayNameFor(model => model.DateModified)
                                    </th>
                                    @*<th>
                                            @Html.DisplayNameFor(model => model.ModifiedBy)
                                        </th>*@
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ID)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Name)  @Html.DisplayFor(modelItem => item.Surname)
                                        </td>
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.Surname)
                                            </td>*@
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.Address)
                                            </td>*@
                                        <td>
                                            @Html.DisplayFor(modelItem => item.JobDescription)
                                        </td>
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.Active)
                                            </td>*@
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Email)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.MobilePhone)
                                        </td>
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.Note)
                                            </td>*@
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.Note2)
                                            </td>*@
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.ColorHex)
                                            </td>*@
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Username)
                                        </td>
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.PasswordSalt)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.PasswordHash)
                                            </td>*@
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.DateCreated)
                                            </td>*@
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.CreatedBy)
                                            </td>*@
                                        <td>
                                            @Html.DisplayFor(modelItem => item.DateModified)
                                        </td>
                                        @*<td>
                                                @Html.DisplayFor(modelItem => item.ModifiedBy)
                                            </td>*@
                                        <td>
                                            <a class="edit" href="javascript:void(0)"><i class="fa fa-user-edit"></i></a> |
                                            <a class="details" href="javascript:void(0)"><i class="fa fa-eye"></i></a> |
                                            @Html.ActionLink(".", "DeleteConfirmed", new { id = item.ID }, new { @class = "fa fa-trash", onclick = "return confirm('Are you sure you want to remove " + @item.Name + " to list ?');" })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div id="dialog">
</div>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.9/jquery-ui.js" type="text/javascript"></script>

<script>
    $(function () {
        $(".details").click(function () {
            var $buttonClicked = $(this);
            var options = {
                "backdrop": "static",
                keyboard: true
            };
            var id = $(this).closest("tr").find("td").eq(0).html();
            var ajaxCallURL = '/Users/Details?id=' + id;
            $.ajax({
                type: "GET",
                url: ajaxCallURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#dialog').html(data);
                    $('#detailsModal').modal(options);
                    $('#detailsModal').modal('show');
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        });
        $(".create").click(function () {
            var $buttonClicked = $(this);
            var options = {
                "backdrop": "static",
                keyboard: true
            };
            var ajaxCallURL = '/Users/Create';
            $.ajax({
                type: "GET",
                url: ajaxCallURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#dialog').html(data);
                    $('#myModal').modal(options);
                    $('#myModal').modal('show');
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        });

        $(".edit").click(function () {
            var $buttonClicked = $(this);
            var options = {
                "backdrop": "static",
                keyboard: true
            };
            var id = $(this).closest("tr").find("td").eq(0).html();
            var ajaxCallURL = '/Users/Edit?id=' + id;
            $.ajax({
                type: "GET",
                url: ajaxCallURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#dialog').html(data);
                    $('#myModal').modal(options);
                    $('#myModal').modal('show');

                    var id = $('#ID').val();
                    if (id != null && id > 0) {
                        if (document.getElementById('Password').value == "" && document.getElementById('ConfirmPassword').value == "") {
                            $(':input[type="submit"]').prop('disabled', true);
                            document.getElementById('ValidConfirmPassword').style.color = 'red';
                            document.getElementById('ValidConfirmPassword').innerHTML = 'Please enter password';
                        }
                        else if (document.getElementById('Password').value ==
                            document.getElementById('ConfirmPassword').value) {
                            $(':input[type="submit"]').prop('disabled', false);
                            document.getElementById('ValidConfirmPassword').style.color = 'green';
                            document.getElementById('ValidConfirmPassword').innerHTML = '';
                        } else {
                            $(':input[type="submit"]').prop('disabled', true);
                            document.getElementById('ValidConfirmPassword').style.color = 'red';
                            document.getElementById('ValidConfirmPassword').innerHTML = 'not matching';
                        }
                    }
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        });
    });
</script>
