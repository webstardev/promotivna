@model MarkomPos.Model.ViewModel.ChangePasswordVm
<div class="modal fade" id="changePasswordModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content footerBg">
            <form method="post" id="changePasswordForm" action="@Url.Action("ChangePassword", "Users")">
                <div class="modal-header txtColor">
                    <h4 class="modal-title">Change Password</h4>
                    <button type="button" class="close txtColor" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body formBg">
                    <section class="content">
                        <div class="container-fluid">
                            <div class="row">
                                <!-- left column -->
                                <div class="col-md-6">
                                    @Html.HiddenFor(model => model.UserId)
                                    <div class="form-group">
                                        @Html.Label("Old Password", htmlAttributes: new { @class = "control-label" })
                                        @Html.Password("OldPassword", "", new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessage("OldPassword", "", new { @id = "ValidOldPassword", @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6"></div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @id = "lblPassword", @class = "control-label" })
                                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Label("Confirm Password", htmlAttributes: new { @id = "lblCnfPassword", @class = "control-label" })
                                        @Html.Password("ConfirmPassword", "", new { @class = "form-control", required = "required" })
                                        @Html.ValidationMessage("ConfirmPassword", "", new { @id = "ValidConfirmPassword", @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
                <div class="modal-footer footerBg">
                    <button type="button" id="btnSubmit" class="btn btn-primary">Submit</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </form>

        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $("#OldPassword").change(function () {
            validateOldPassword();
        });
        $("#Password").keyup(function () {
            passwordMatch();
        });
        $("#ConfirmPassword").keyup(function () {
            passwordMatch();
        });
    });

    function passwordMatch() {
        if (document.getElementById('Password').value == "" && document.getElementById('ConfirmPassword').value == "") {
            $(':input[type="submit"]').prop('disabled', true);
            document.getElementById('ValidConfirmPassword').style.color = 'red';
            document.getElementById('ValidConfirmPassword').innerHTML = 'Please enter password';
        }
        else if (document.getElementById('Password').value ==
            document.getElementById('ConfirmPassword').value) {
            $(':input[type="submit"]').prop('disabled', false);
            document.getElementById('ValidConfirmPassword').style.color = 'green';
            document.getElementById('ValidConfirmPassword').innerHTML = '';
        } else {
            $(':input[type="submit"]').prop('disabled', true);
            document.getElementById('ValidConfirmPassword').style.color = 'red';
            document.getElementById('ValidConfirmPassword').innerHTML = 'not matching';
        }
    }

    function validateOldPassword() {
        var IsExistURL = '/Users/validateOldPassword';
        $.ajax({
            type: "GET",
            url: IsExistURL,
            data: {
                id: $("#UserId").val(),
                password: $("#OldPassword").val()
            },
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                if (data == false) {
                    $("#OldPassword").val(null);
                    alert("Your old password is not proper")
                }
            },
            error: function () {
                alert("Something failed.");
            }
        });
    }

</script>

<script>
    $(function () {
        $("#btnSubmit").click(function () {
            var data = $('#changePasswordForm').serialize();
            var changePasswordURL = '/Users/ChangeUserPassword';
            $.ajax({
                type: "POST",
                url: changePasswordURL,
                cache: false,
                data: data,
                success: function (data) {
                    if (data == true) {
                        alert("Password Changed Successfully!")
                        window.location.href = "/Users/Index";
                    }
                    else {
                        alert("Password Update failed!");
                    }
                },
                error: function () {
                    alert("Something failed.");
                }
            });
        });
    });
</script>